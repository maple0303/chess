//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EmSkillPosWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(EmSkillPos));
		L.RegVar("emAlign_RoleFoot", get_emAlign_RoleFoot, null);
		L.RegVar("emAlign_RoleChest", get_emAlign_RoleChest, null);
		L.RegVar("emAlign_RoleHead", get_emAlign_RoleHead, null);
		L.RegVar("emAlign_Scene", get_emAlign_Scene, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<EmSkillPos>.Check = CheckType;
		StackTraits<EmSkillPos>.Push = Push;
	}

	static void Push(IntPtr L, EmSkillPos arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(EmSkillPos), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_emAlign_RoleFoot(IntPtr L)
	{
		ToLua.Push(L, EmSkillPos.emAlign_RoleFoot);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_emAlign_RoleChest(IntPtr L)
	{
		ToLua.Push(L, EmSkillPos.emAlign_RoleChest);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_emAlign_RoleHead(IntPtr L)
	{
		ToLua.Push(L, EmSkillPos.emAlign_RoleHead);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_emAlign_Scene(IntPtr L)
	{
		ToLua.Push(L, EmSkillPos.emAlign_Scene);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		EmSkillPos o = (EmSkillPos)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

