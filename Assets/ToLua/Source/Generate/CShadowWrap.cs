//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class CShadowWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(CShadow), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("SetTargetGameObj", SetTargetGameObj);
		L.RegFunction("StartEffect", StartEffect);
		L.RegFunction("Stop", Stop);
		L.RegFunction("SetMaxNum", SetMaxNum);
		L.RegFunction("SetOffsetX", SetOffsetX);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_targetGameObj", get_m_targetGameObj, set_m_targetGameObj);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetTargetGameObj(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CShadow obj = (CShadow)ToLua.CheckObject<CShadow>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.SetTargetGameObj(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartEffect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CShadow obj = (CShadow)ToLua.CheckObject<CShadow>(L, 1);
			obj.StartEffect();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Stop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CShadow obj = (CShadow)ToLua.CheckObject<CShadow>(L, 1);
			obj.Stop();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMaxNum(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CShadow obj = (CShadow)ToLua.CheckObject<CShadow>(L, 1);
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.SetMaxNum(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetOffsetX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CShadow obj = (CShadow)ToLua.CheckObject<CShadow>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetOffsetX(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_targetGameObj(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CShadow obj = (CShadow)o;
			UnityEngine.GameObject ret = obj.m_targetGameObj;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_targetGameObj on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_targetGameObj(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CShadow obj = (CShadow)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.m_targetGameObj = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_targetGameObj on a nil value");
		}
	}
}

