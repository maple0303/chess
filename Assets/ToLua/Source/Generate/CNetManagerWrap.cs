//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class CNetManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(CNetManager), typeof(System.Object));
		L.RegFunction("GetIPv6", GetIPv6);
		L.RegFunction("ConnectServer", ConnectServer);
		L.RegFunction("Run", Run);
		L.RegFunction("Send", Send);
		L.RegFunction("SetOnConnectCallback", SetOnConnectCallback);
		L.RegFunction("SetCloseConnectCallback", SetCloseConnectCallback);
		L.RegFunction("SetServerMessageCallback", SetServerMessageCallback);
		L.RegFunction("Destroy", Destroy);
		L.RegFunction("New", _CreateCNetManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateCNetManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				CNetManager obj = new CNetManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: CNetManager.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetIPv6(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			string o = CNetManager.GetIPv6(arg0, arg1);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConnectServer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			CNetManager obj = (CNetManager)ToLua.CheckObject<CNetManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			bool o = obj.ConnectServer(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Run(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CNetManager obj = (CNetManager)ToLua.CheckObject<CNetManager>(L, 1);
			obj.Run();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Send(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			CNetManager obj = (CNetManager)ToLua.CheckObject<CNetManager>(L, 1);
			ByteBuffer arg0 = (ByteBuffer)ToLua.CheckObject<ByteBuffer>(L, 2);
			short arg1 = (short)LuaDLL.luaL_checknumber(L, 3);
			obj.Send(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetOnConnectCallback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CNetManager obj = (CNetManager)ToLua.CheckObject<CNetManager>(L, 1);
			OnServerConnect arg0 = (OnServerConnect)ToLua.CheckDelegate<OnServerConnect>(L, 2);
			obj.SetOnConnectCallback(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCloseConnectCallback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CNetManager obj = (CNetManager)ToLua.CheckObject<CNetManager>(L, 1);
			OnServerCloseConnect arg0 = (OnServerCloseConnect)ToLua.CheckDelegate<OnServerCloseConnect>(L, 2);
			obj.SetCloseConnectCallback(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetServerMessageCallback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CNetManager obj = (CNetManager)ToLua.CheckObject<CNetManager>(L, 1);
			OnServerMessage arg0 = (OnServerMessage)ToLua.CheckDelegate<OnServerMessage>(L, 2);
			obj.SetServerMessageCallback(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Destroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CNetManager obj = (CNetManager)ToLua.CheckObject<CNetManager>(L, 1);
			obj.Destroy();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

