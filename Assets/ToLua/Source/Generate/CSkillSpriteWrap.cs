//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class CSkillSpriteWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(CSkillSprite), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("SetPlayEndCallBack", SetPlayEndCallBack);
		L.RegFunction("SetKeyFrameCallBack", SetKeyFrameCallBack);
		L.RegFunction("SetAudioSource", SetAudioSource);
		L.RegFunction("SetHitKeyFrameCallBack", SetHitKeyFrameCallBack);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_eSkillPos", get_m_eSkillPos, set_m_eSkillPos);
		L.RegVar("m_strNextEffect", get_m_strNextEffect, set_m_strNextEffect);
		L.RegVar("m_strDamageEffectName", get_m_strDamageEffectName, set_m_strDamageEffectName);
		L.RegVar("m_strHitEffectName", get_m_strHitEffectName, set_m_strHitEffectName);
		L.RegVar("m_audioSource", get_m_audioSource, set_m_audioSource);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetPlayEndCallBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			CSkillSprite obj = (CSkillSprite)ToLua.CheckObject<CSkillSprite>(L, 1);
			OnSkillEnd arg0 = (OnSkillEnd)ToLua.CheckDelegate<OnSkillEnd>(L, 2);
			object arg1 = ToLua.ToVarObject(L, 3);
			obj.SetPlayEndCallBack(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetKeyFrameCallBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CSkillSprite obj = (CSkillSprite)ToLua.CheckObject<CSkillSprite>(L, 1);
			OnSkillKeyFrame arg0 = (OnSkillKeyFrame)ToLua.CheckDelegate<OnSkillKeyFrame>(L, 2);
			obj.SetKeyFrameCallBack(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAudioSource(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CSkillSprite obj = (CSkillSprite)ToLua.CheckObject<CSkillSprite>(L, 1);
			UnityEngine.AudioSource arg0 = (UnityEngine.AudioSource)ToLua.CheckObject(L, 2, typeof(UnityEngine.AudioSource));
			obj.SetAudioSource(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetHitKeyFrameCallBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CSkillSprite obj = (CSkillSprite)ToLua.CheckObject<CSkillSprite>(L, 1);
			OnSkillTriggerHitEffect arg0 = (OnSkillTriggerHitEffect)ToLua.CheckDelegate<OnSkillTriggerHitEffect>(L, 2);
			obj.SetHitKeyFrameCallBack(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_eSkillPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CSkillSprite obj = (CSkillSprite)o;
			EmSkillPos ret = obj.m_eSkillPos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_eSkillPos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_strNextEffect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CSkillSprite obj = (CSkillSprite)o;
			string ret = obj.m_strNextEffect;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_strNextEffect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_strDamageEffectName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CSkillSprite obj = (CSkillSprite)o;
			string ret = obj.m_strDamageEffectName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_strDamageEffectName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_strHitEffectName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CSkillSprite obj = (CSkillSprite)o;
			string ret = obj.m_strHitEffectName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_strHitEffectName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_audioSource(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CSkillSprite obj = (CSkillSprite)o;
			UnityEngine.AudioSource ret = obj.m_audioSource;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_audioSource on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_eSkillPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CSkillSprite obj = (CSkillSprite)o;
			EmSkillPos arg0 = (EmSkillPos)ToLua.CheckObject(L, 2, typeof(EmSkillPos));
			obj.m_eSkillPos = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_eSkillPos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_strNextEffect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CSkillSprite obj = (CSkillSprite)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.m_strNextEffect = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_strNextEffect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_strDamageEffectName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CSkillSprite obj = (CSkillSprite)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.m_strDamageEffectName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_strDamageEffectName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_strHitEffectName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CSkillSprite obj = (CSkillSprite)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.m_strHitEffectName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_strHitEffectName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_audioSource(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CSkillSprite obj = (CSkillSprite)o;
			UnityEngine.AudioSource arg0 = (UnityEngine.AudioSource)ToLua.CheckObject(L, 2, typeof(UnityEngine.AudioSource));
			obj.m_audioSource = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_audioSource on a nil value");
		}
	}
}

